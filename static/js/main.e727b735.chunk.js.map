{"version":3,"sources":["SearchBar.js","LoadingSpinner.js","Image.js","SingleBook.js","SearchResults.js","BookFinder.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","text","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","handleSearch","className","onSubmit","this","Input","size","action","icon","placeholder","onChange","style","width","Component","LoadingSpinner","role","Image","loading","dimensions","failed","checkDimensions","img","offsetHeight","height","offsetWidth","imgUrl","imgPath","book","onLoad","onError","alert","src","alt","SingleBook","selected","handleClick","List","Item","key","bookId","Content","Header","Button","onClick","type","data-toggle","data-target","aria-expanded","aria-controls","content","id","SearchResults","numOfBooksShowing","showMore","prev","console","log","data","books","slice","map","item","index","hasResults","length","iconNames","badgeClass","Segment","Icon","name","numFound","searchText","celled","BookFinder","query","split","join","fetch","then","response","json","as","textAlign","circular","href","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e727b735.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Input } from \"semantic-ui-react\";\n\nclass SearchBar extends Component {\n  state = {\n    text: \"\"\n  };\n\n  handleChange = e => {\n    const text = e.target.value;\n    this.setState({ text });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSearch(this.state.text);\n  };\n\n  render() {\n    return (\n      <div className=\"col-md-6 mt-2 mx-auto\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group row\">\n            <Input\n              size=\"huge\"\n              action={{ icon: \"search\" }}\n              placeholder=\"Enter the book info.\"\n              onChange={this.handleChange}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nfunction LoadingSpinner(props) {\n  return (\n    <div className=\"spinner-border p-2\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nclass Image extends Component {\n  state = {\n    loading: true,\n    dimensions: {},\n    failed: false\n  };\n\n  checkDimensions = ({ target: img }) => {\n    const failed = img.offsetHeight + img.offsetHeight < 5;\n    this.setState({\n      loading: false,\n      dimensions: {\n        height: img.offsetHeight,\n        width: img.offsetWidth\n      },\n      failed: failed\n    });\n  };\n\n  render() {\n    let imgUrl = \"\";\n    let imgPath = \"\";\n    // Try isbn and oclc codes for cover url\n    if (this.props.book[\"isbn\"]) {\n      let isbn = this.props.book[\"isbn\"][0];\n      imgPath = \"isbn/\" + isbn;\n    } else if (this.props.book[\"oclc\"]) {\n      let oclc = this.props.book[\"oclc\"];\n      imgPath = \"oclc/\" + oclc;\n    } else {\n      imgPath = \"isbn/000000\";\n    }\n\n    imgUrl = `http://covers.openlibrary.org/b/${imgPath}-M.jpg`;\n\n    return (\n      <>\n        {this.state.loading && <LoadingSpinner />}\n        {this.state.failed ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            Cover not found!\n          </div>\n        ) : (\n          <img\n            onLoad={this.checkDimensions}\n            onError={() => alert(\"Error loading image!\")}\n            src={imgUrl}\n            alt={`Cover of ${this.props.book[\"title_suggest\"]}`}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from \"react\";\nimport Image from \"./Image\";\nimport { List, Button } from \"semantic-ui-react\";\nclass SingleBook extends Component {\n  state = {\n    selected: false\n  };\n\n  handleClick = () => {\n    this.setState({ selected: true });\n  };\n\n  render() {\n    return (\n      <List.Item key={`book-${this.props.bookId}`}>\n        <List.Content>\n          <div className=\"row\">\n            <div className=\"col-md-9\">\n              <List.Header>{this.props.book[\"title_suggest\"]}</List.Header>\n              {this.props.book[\"author_name\"]}\n            </div>\n            <div className=\"col-md-3 pl ml-auto\">\n              <Button\n                onClick={this.handleClick}\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target={`#collapse-book-${this.props.bookId}`}\n                aria-expanded=\"false\"\n                aria-controls={`collapse-book-${this.props.bookId}`}\n                content=\"Find cover\"\n                className=\"btn-cover\"\n              />\n            </div>\n          </div>\n          <div className=\"collapse\" id={`collapse-book-${this.props.bookId}`}>\n            <div className=\"book-cover text-center\">\n              {this.state.selected && <Image book={this.props.book} />}\n            </div>\n          </div>\n        </List.Content>\n      </List.Item>\n    );\n  }\n}\n\nexport default SingleBook;\n","import React, { Component } from \"react\";\nimport \"./SearchResults.css\";\nimport SingleBook from \"./SingleBook\";\nimport { Header, Icon, Segment, List } from \"semantic-ui-react\";\n\nclass SearchResults extends Component {\n  state = {\n    numOfBooksShowing: 4\n  };\n\n  componentDidMount() {\n    this.setState({ numOfBooksShowing: 4 });\n  }\n\n  showMore = () => {\n    this.setState(prev => ({ numOfBooksShowing: prev.numOfBooksShowing + 4 }));\n  };\n\n  render() {\n    console.log(typeof this.props.data);\n    const books =\n      this.props.data &&\n      this.props.data[\"docs\"]\n        .slice(0, this.state.numOfBooksShowing)\n        .map((item, index) => <SingleBook bookId={index} book={item} />);\n    const hasResults = !!books.length;\n    const iconNames = hasResults ? \"book\" : \"warning circle\";\n    const badgeClass = hasResults ? \"badge-success\" : \"badge-danger\";\n    return (\n      <div className=\"search-results\">\n        <Segment placeholder>\n          <Header icon>\n            <Icon name={iconNames} />\n            Found\n            <span className={`badge badge-pill ${badgeClass} mx-1 my-auto`}>\n              {this.props.data.numFound}\n            </span>\n            results for \"<em>{this.props.searchText}</em>\".\n          </Header>\n          <List celled size=\"big\">\n            {books}\n          </List>\n          {this.props.data &&\n            this.props.data.numFound > this.state.numOfBooksShowing && (\n              <button className=\"btn btn-warning mt-3\" onClick={this.showMore}>\n                Show more\n              </button>\n            )}\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResults from \"./SearchResults\";\n// eslint-disable-next-line\nimport mockData from \"./mockData\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { Header, Icon } from \"semantic-ui-react\";\nclass BookFinder extends Component {\n  state = {\n    data: \"\",\n    loading: false,\n    searchText: \"\"\n  };\n\n  handleSearch = text => {\n    // Convert input into query format\n    const searchWords = text.split(\" \");\n    const query = searchWords.join(\"+\");\n    // Reset the previous state, if any\n    this.setState({ data: \"\", loading: true });\n    fetch(`https://openlibrary.org/search.json?q=${query}`)\n      .then(response => response.json())\n      .then(data => this.setState({ loading: false, searchText: text, data }));\n    // Mock API fetch using previously fetched and saved data\n    //  this.setState({ loading: false, data: mockData, searchText: text });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"jumbotron p-3 bg-light\">\n          <SearchBar handleSearch={this.handleSearch} />\n        </div>\n        {!this.state.data && !this.state.loading && (\n          <div>\n            <Header as=\"h1\" icon textAlign=\"center\">\n              <Icon name=\"book\" circular />\n              <Header.Content>Welcome to BookFinder!</Header.Content>\n            </Header>\n            <p>\n              Enter keywords for your book (title, author, isbn, or else), then\n              click the button.\n            </p>\n          </div>\n        )}\n        {this.state.loading && <LoadingSpinner />}\n        <div className=\"row\">\n          <div className=\"col-md-7 m-auto\">\n            {/* List search results if data has been fetched */}\n            {this.state.data && (\n              <SearchResults\n                data={this.state.data}\n                searchText={this.state.searchText}\n              />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default BookFinder;\n","import React from \"react\";\n\nexport default function Header() {\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <span role=\"img\" aria-label=\"books\">\n            📚\n          </span>{\" \"}\n          Book Finder\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#headerNavbarToggler\"\n          aria-controls=\"headerNavbarToggler\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"headerNavbarToggler\">\n          <ul className=\"navbar-nav mt-2 mt-lg-0 ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"./\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                Go Top\n              </a>\n            </li>\n          </ul>\n\n          {/* SEARCH FORM\n          <form className=\"form-inline my-2 my-lg-0 ml-auto\">\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n            />\n            <button\n              className=\"btn btn-outline-success my-2 my-sm-0\"\n              type=\"submit\"\n            >\n              Search\n            </button>\n          </form>\n          */}\n        </div>\n      </nav>\n    </header>\n  );\n}\n","import React from 'react';\nimport BookFinder from \"./BookFinder\";\nimport Header from \"./Header\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"mt-5 pt-2\">\n      <BookFinder />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"semantic-ui-css/semantic.min.css\"\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}